name: Docker Build and Test

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: false
  push:
    branches: [ "improvement/docker-testing-workflow-branch" ]

jobs:
  build_and_test:
    if: ${{ github.ref == 'refs/heads/improvement/docker-testing-workflow-branch' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: aisk-unit-testing  # Replace with your actual Docker image name
      DOCKER_TAG: ${{ github.sha }}
      PROD_MODE: false
      TEST_MODE: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install QEMU manually
      - name: Set up QEMU
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all

      # Set up Buildx manually
      - name: Set up Docker Buildx
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -L https://github.com/docker/buildx/releases/download/v0.10.5/buildx-v0.10.5.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
          chmod +x ~/.docker/cli-plugins/docker-buildx
          docker buildx version
          docker buildx create --use

      - name: Create empty .env file
        run: touch .env

      - name: Build multi-platform Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg PROD_MODE=$PROD_MODE \
            --build-arg TEST_MODE=$TEST_MODE \
            --secret id=env,src=.env \
            -t $DOCKER_IMAGE:$DOCKER_TAG \
            --load \
            .

      - name: List Docker images
        run: docker images

      - name: Make run_tests.sh executable
        run: chmod +x ./run_tests.sh

      - name: Run tests
        env:
          SAMBANOVA_API_KEY: ${{ secrets.SAMBANOVA_API_KEY }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          DOCKER_TAG: ${{ env.DOCKER_TAG }}
          PROD_MODE: ${{ env.PROD_MODE }}
          TEST_MODE: ${{ env.TEST_MODE }}
        run: |
          ./run_tests.sh docker --skip-streamlit
