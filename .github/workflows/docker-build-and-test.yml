name: Docker Build and Test

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: false
  push:
    branches: [ "improvement/docker-testing-workflow-branch" ]

jobs:
  build_and_test:
    if: ${{ github.ref == 'refs/heads/improvement/docker-testing-workflow-branch' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      # Define environment variables used in the workflow
      DOCKER_IMAGE: aisk-unit-tests  # Replace with your actual Docker image name
      DOCKER_TAG: ${{ github.sha }}
      PROD_MODE: false
      TEST_MODE: true
      # Enable debug logging
      ACTIONS_RUNNER_DEBUG: 'true'
      ACTIONS_STEP_DEBUG: 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Assuming you have added a .dockerignore file to reduce build context
      # This step is optional and can be removed if the .dockerignore is already in your repository
      - name: Verify .dockerignore is present
        run: |
          if [ ! -f .dockerignore ]; then
            echo "Error: .dockerignore file is missing."
            exit 1
          else
            echo ".dockerignore file is present."
          fi

      - name: Create empty .env file
        run: touch .env

      - name: Build Docker image
        env:
          DOCKER_BUILDKIT: 0  # Disable BuildKit
        run: |
          echo "Building Docker image..."
          docker build \
            --build-arg PROD_MODE=$PROD_MODE \
            --build-arg TEST_MODE=$TEST_MODE \
            --secret id=env,src=.env \
            -t $DOCKER_IMAGE:$DOCKER_TAG \
            .

      - name: List Docker images
        run: docker images

      - name: Make run_tests.sh executable
        run: chmod +x ./run_tests.sh

      - name: Run tests
        env:
          SAMBANOVA_API_KEY: ${{ secrets.SAMBANOVA_API_KEY }}
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          DOCKER_TAG: ${{ env.DOCKER_TAG }}
          PROD_MODE: ${{ env.PROD_MODE }}
          TEST_MODE: ${{ env.TEST_MODE }}
        run: |
          ./run_tests.sh docker --skip-streamlit

      # Note: We cannot use 'actions/upload-artifact' due to organizational policies
      # If you need to upload test results, consider alternative methods
